version: 2.1
jobs:
  test:
    docker:
      - image: cimg/go:1.22
    steps:
      - checkout
      - run:
          name: Create temp directories for artifacts
          command: |
            mkdir -p /tmp/test-artifacts
            mkdir -p /tmp/test-results
      - run:
          name: Install JUnit plugin for uploading testresults
          command: go install github.com/jstemmer/go-junit-report/v2@latest
      - run:
          name: Test include Codecoverage
          command: |
            go test ./... -coverprofile=/tmp/coverage -v -covermode=atomic 2>&1 | go-junit-report -set-exit-code > /tmp/test-results/go-test-report.xml
      - run:
          name: Check formated
          command: "! gofmt -l . 2>&1 | read"
      - run:
          name: Cleanup dependencies
          command: go mod tidy
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-artifacts

  validate_docker:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: Install required tools
          command: |
            sudo apt-get update -y
            cd /tmp
            wget https://dl.google.com/go/go1.22.4.linux-amd64.tar.gz
            sudo tar -xvf go1.22.4.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo mv go /usr/local
            export GOPATH=/home/circleci/.go_workspace
            export PATH=$PATH:$GOPATH/bin
            go version
      - run:
          name: Build and test docker images
          command: make test-docker

  distribute:
    docker:
      - image: golang:1.22
    steps:
      - checkout
      - run:
          name: Build binaries
          command: make dist
      - run:
          name: Upload binaries
          command: |
            go install github.com/tcnksm/ghr@latest
            ghr -u $CIRCLE_PROJECT_USERNAME $CIRCLE_TAG _dist

  distribute_docker:
    docker:
      - image: cimg/base:2024.05
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push docker images
          command: make dockerdist

workflows:
  test-and-build:
    jobs:
      - test:
          context: SonarCloud
      - validate_docker:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      # - distribute:
      #     requires:
      #       - test
      #     filters:
      #       tags:
      #         only: /v[0-9]+(\.[0-9]+)*(-.*)?/
      #       branches:
      #         ignore: /.*/
      # - distribute_docker:
      #     requires:
      #       - distribute
      #     filters:
      #       tags:
      #         only: /v[0-9]+(\.[0-9]+)*(-.*)?/
      #       branches:
      #         ignore: /.*/
# VS Code Extension Version: 1.5.1
